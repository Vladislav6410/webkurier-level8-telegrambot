from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes

# –ö–æ–º–∞–Ω–¥–∞ /—Ü–µ–Ω—ã
async def prices(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîπ Base Map ‚Äî 390‚Ç¨", callback_data="price_base")],
        [InlineKeyboardButton("üî∑ 3D Terrain ‚Äî 790‚Ç¨", callback_data="price_3d")],
        [InlineKeyboardButton("üî¥ GeoAnalysis ‚Äî 1290‚Ç¨", callback_data="price_geo")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üìä –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç —Å—ä—ë–º–∫–∏ (1 –∫–º¬≤):",
        reply_markup=reply_markup
    )

# –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
async def price_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    selection = query.data
    packages = {
        "price_base": (
            "üîπ Base Map\n"
            "‚Ä¢ –û—Ä—Ç–æ—Ñ–æ—Ç–æ (GeoTIFF, JPG)\n"
            "‚Ä¢ PDF-–∫–∞—Ä—Ç–∞, –±–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n"
            "üí∞ 390‚Ç¨, ‚è± 1‚Äì2 –¥–Ω—è"
        ),
        "price_3d": (
            "üî∑ 3D Terrain\n"
            "‚Ä¢ DSM/DTM, 3D-–º–æ–¥–µ–ª—å, –æ–±–ª–∞–∫–æ —Ç–æ—á–µ–∫\n"
            "‚Ä¢ –ì–µ–æ–ø—Ä–∏–≤—è–∑–∫–∞ —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é\n"
            "üí∞ 790‚Ç¨, ‚è± 2‚Äì3 –¥–Ω—è"
        ),
        "price_geo": (
            "üî¥ GeoAnalysis\n"
            "‚Ä¢ NDVI/NDRE, PDF-–æ—Ç—á—ë—Ç, –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è\n"
            "‚Ä¢ –û–±—ä—ë–º—ã, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –≥—Ä–∞–Ω–∏—Ü—ã –æ–±—ä–µ–∫—Ç–æ–≤\n"
            "üí∞ 1290‚Ç¨, ‚è± 3‚Äì5 –¥–Ω–µ–π"
        )
    }

    await query.edit_message_text(
        text=f"{packages.get(selection)}\n\n"
             "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–æ–∫:\n"
             "‚Äî –∞–¥—Ä–µ—Å, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª (.kml, .jpg)"
    )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_price_handlers(application):
    application.add_handler(CommandHandler("—Ü–µ–Ω—ã", prices))
    application.add_handler(CallbackQueryHandler(price_selected))cp prices.py yourbot/handlers/