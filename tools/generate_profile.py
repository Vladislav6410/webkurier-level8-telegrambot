import telebot
import logging

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
in BOT TOKEN:print("7760997174:AAHFS_BpIMekNheOlU82M4WZ7qCxRxusFj4")exit()
ADMIN_IDS = [7760997174]  # –í–∞—à Telegram ID
@bot.message_handler(commands=['myid'])
def my_id(message):
    bot.send_message(message.chat.id, f"–í–∞—à Telegram ID: {message.from_user.id}")

bot = telebot.TeleBot(BOT_TOKEN)
user_data = {}

logging.basicConfig(level=logging.INFO)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@bot.message_handler(commands=['start'])
def start(message):
    logging.info(f"User {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /start")
    bot.send_message(
        message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "1. –í–≤–µ–¥–∏—Ç–µ /register –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"
        "2. –í–≤–µ–¥–∏—Ç–µ email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω\n"
        "3. –í–≤–µ–¥–∏—Ç–µ /getpdf –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n"
        "Support: info@webkurier.ai",
        parse_mode='Markdown'
    )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['register'])
def get_email(message):
    logging.info(f"User {message.from_user.id} –Ω–∞—á–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email:")
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    email = message.text.strip()
    if "@" not in email or "." not in email:
        bot.send_message(message.chat.id, "‚ùó –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –Ω–µ email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:")
        return bot.register_next_step_handler(message, get_phone)
    user_data[message.chat.id] = {'email': email}
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(message, complete_registration)

def complete_registration(message):
    phone = message.text.strip()
    if not phone.replace('+', '').isdigit():
        bot.send_message(message.chat.id, "‚ùó –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:")
        return bot.register_next_step_handler(message, complete_registration)
    user_data[message.chat.id]['phone'] = phone
    logging.info(f"User {message.from_user.id} –∑–∞–≤–µ—Ä—à–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: {user_data[message.chat.id]}")
    bot.send_message(
        message.chat.id,
        "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /getpdf"
    )

# –í—ã–¥–∞—á–∞ PDF –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@bot.message_handler(commands=['getpdf'])
def send_pdf(message):
    if message.chat.id in user_data:
        pdf_url = "https://www.dropbox.com/scl/fo/hj4ittvewpbrlicfi1a8a/AODLElTJcpBWrLUSWLTgRh0?rlkey=rw12efhti79wmdfzb7o9wcxl7&st=kmxuohf7&dl=0"
        bot.send_message(
            message.chat.id,
            f"üìÑ –í–∞—à–∞ PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: [—Å–∫–∞—á–∞—Ç—å]({pdf_url})",
            parse_mode='Markdown'
        )
        logging.info(f"User {message.from_user.id} –ø–æ–ª—É—á–∏–ª PDF")
    else:
        bot.send_message(
            message.chat.id,
            "‚ùó –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /register"
        )

# –ê–¥–º–∏–Ω-–¥–æ—Å—Ç—É–ø
@bot.message_handler(commands=['admin'])
def admin_access(message):
    if message.from_user.id in ADMIN_IDS:
        bot.send_message(message.chat.id, "‚úÖ –ê–¥–º–∏–Ω-–¥–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.")
        logging.info(f"Admin {message.from_user.id} –≤–æ—à—ë–ª –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    else:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(func=lambda message: True)
def unknown_message(message):
    bot.send_message(
        message.chat.id,
        "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–ª–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
