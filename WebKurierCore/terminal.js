// === –ò–º–ø–æ—Ä—Ç Dropbox –∞–≥–µ–Ω—Ç–∞ ===
import { dropboxAgent } from './engine/dropbox-agent.js';

// === –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º (–∑–∞–≥–ª—É—à–∫–∏, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏) ===
function getBalance() {
  // –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å (–ø—Ä–∏–º–µ—Ä)
  return parseInt(localStorage.getItem('balance') || '0');
}
function setBalance(val) {
  localStorage.setItem('balance', val);
}
function addCoins(n) {
  setBalance(getBalance() + n);
}
function resetCoins() {
  setBalance(0);
}

// === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª ===
function printToTerminal(msg, isHtml = false) {
  const log = document.getElementById('terminal-log');
  log.innerHTML += isHtml ? `<div>${msg}</div>` : `<div>${escapeHtml(msg)}</div>`;
  log.scrollTop = log.scrollHeight;
}
function escapeHtml(text) {
  const div = document.createElement('div');
  div.innerText = text;
  return div.innerHTML;
}

// === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ ===
function handleCommand(e) {
  if (e.key === 'Enter') {
    const input = document.getElementById('terminal-input');
    const command = input.value.trim();

    if (command) {
      printToTerminal(`> ${command}`);
      input.value = '';
    }

    // –ö–æ–º–∞–Ω–¥—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
    switch (true) {
      case command === 'ping':
        printToTerminal('Pong üü¢');
        break;

      case command === 'help':
        printToTerminal('–ö–æ–º–∞–Ω–¥—ã: ping, help, reset, balance, /add [n], /save [–∏–º—è], /load [–∏–º—è], /list, /history');
        break;

      case command === 'reset':
        resetCoins();
        printToTerminal('–ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω.');
        break;

      case command === 'balance':
        printToTerminal(`–ë–∞–ª–∞–Ω—Å: ${getBalance()} WKC`);
        break;

      case command.startsWith('/add'):
        {
          const parts = command.split(' ');
          const num = parseInt(parts[1] || '0');
          if (isNaN(num) || num <= 0) {
            printToTerminal('–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.');
          } else {
            addCoins(num);
            printToTerminal(`–î–æ–±–∞–≤–ª–µ–Ω–æ: ${num} WKC`);
          }
        }
        break;

      case command.startsWith('/save'):
        {
          const saveParts = command.split(' ');
          const saveName = saveParts[1] || 'webcoin.txt';
          const content = `–ë–∞–ª–∞–Ω—Å: ${getBalance()} WKC`;
          dropboxAgent.save(saveName, content)
            .then(() => printToTerminal(`‚úÖ –§–∞–π–ª "${saveName}" —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ Dropbox.`))
            .catch(err => printToTerminal(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${err.message || err}`));
        }
        break;

      case command.startsWith('/load
