// dropbox-agent.js ‚Äî –∞–≥–µ–Ω—Ç Dropbox –¥–ª—è WebKurierCore

import { uploadFile, downloadFile, listFiles } from './dropbox.js';

export const dropboxAgent = {
  // üì§ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –≤ Dropbox
  async save(filename = 'webcoin.txt', content = '') {
    try {
      await uploadFile('/WebKurierCore/memory/' + filename, content);
      logToTerminal(`üì§ –§–∞–π–ª "${filename}" —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ Dropbox.`);
    } catch (err) {
      logToTerminal(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ "${filename}": ${err.message}`);
    }
  },

  // üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∏–∑ Dropbox
  async load(filename = 'webcoin.txt') {
    try {
      const blob = await downloadFile('/WebKurierCore/memory/' + filename);
      const text = await blob.text();
      logToTerminal(`üì• –§–∞–π–ª "${filename}" –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ Dropbox:\n${text}`);
    } catch (err) {
      logToTerminal(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ "${filename}": ${err.message}`);
    }
  },

  // üìÅ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
  async list() {
    try {
      const files = await listFiles('/WebKurierCore/memory/');
      if (!files.length) return logToTerminal('üìÇ –ü–∞–ø–∫–∞ Dropbox –ø—É—Å—Ç–∞.');
      const fileList = files.map(f => '‚Ä¢ ' + f.name).join('\n');
      logToTerminal(`üìÅ –§–∞–π–ª—ã –≤ Dropbox:\n${fileList}`);
    } catch (err) {
      logToTerminal(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: ${err.message}`);
    }
  }
};

// üîß –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
function logToTerminal(message) {
  const el = document.getElementById('terminal-log');
  if (el) {
    el.innerHTML += `<div>${message}</div>`;
    el.scrollTop = el.scrollHeight;
  }
}// === ‚è¨ [–ù–∞—á–∞–ª–æ –±–ª–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ –ò—Å—Ç–æ—Ä–∏—è Copilot] ===
document.getElementById('history-btn').addEventListener('click', async () => {
  const content = await dropboxAgent.load('dropbox-history.json');
  if (content) {
    alert('üìú –ò—Å—Ç–æ—Ä–∏—è Copilot:\n\n' + content);
  } else {
    alert('‚ùå –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
  }
});
// === ‚è´ [–ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ –ò—Å—Ç–æ—Ä–∏—è Copilot] ===