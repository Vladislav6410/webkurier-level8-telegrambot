// engine/dropbox.js

// –ò–º–ø–æ—Ä—Ç SDK Dropbox
import { Dropbox } from 'https://unpkg.com/dropbox@11.0.4/dist/Dropbox-sdk.min.js';

// üîê –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à Dropbox access token
const ACCESS_TOKEN = 'YOUR_DROPBOX_ACCESS_TOKEN_HERE';

export const dbx = new Dropbox({ accessToken: ACCESS_TOKEN });

// üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ Dropbox
export async function uploadFile(path, contents) {
  try {
    const response = await dbx.filesUpload({
      path: path,
      contents: contents,
      mode: 'overwrite'
    });
    console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', response);
    return response;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
    return null;
  }
}

// üì§ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ Dropbox
export async function downloadFile(path) {
  try {
    const response = await dbx.filesDownload({ path });
    const blob = response.result.fileBlob;
    console.log('‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω:', response);
    return blob;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', error);
    return null;
  }
}

// üìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
export async function listFiles(folderPath = '') {
  try {
    const response = await dbx.filesListFolder({ path: folderPath });
    return response.result.entries;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error);
    return [];
  }
}