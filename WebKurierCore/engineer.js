// engineer.js ‚Äî —Ü–∏—Ñ—Ä–æ–≤–æ–π –∏–Ω–∂–µ–Ω–µ—Ä WebKurier

const engineer = {
  log: (msg) => {
    const log = document.getElementById('terminal-log');
    log.innerHTML += `<div>${msg}</div>`;
    log.scrollTop = log.scrollHeight;
  },

  run: (cmd) => {
    switch (cmd) {
      case 'status':
        engineer.log('‚úÖ –ò–Ω–∂–µ–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ.');
        break;

      case 'clear':
        document.getElementById('terminal-log').innerHTML = '';
        engineer.log('üßπ –õ–æ–≥ –æ—á–∏—â–µ–Ω.');
        break;

      case 'version':
        engineer.log('üõ† –í–µ—Ä—Å–∏—è: WebKurier Engineer v1.0');
        break;

      case 'modules':
        engineer.log('üì¶ –ú–æ–¥—É–ª–∏: –∫–æ—à–µ–ª—ë–∫, —Ç–µ—Ä–º–∏–Ω–∞–ª, Dropbox, DreamMaker');
        break;

      case 'report':
        const b = getBalance();
        engineer.log(`üìÑ –û—Ç—á—ë—Ç: –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî ${b} WKC`);
        break;

      case 'help':
        engineer.log(`üõ† –ö–æ–º–∞–Ω–¥—ã –∏–Ω–∂–µ–Ω–µ—Ä–∞:
- status
- clear
- version
- modules
- report
- help`);
        break;

      default:
        engineer.log(`‚ùì –ö–æ–º–∞–Ω–¥–∞ "${cmd}" –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ help.`);
    }
  }
};

// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º
function handleCommand(e) {
  if (e.key === 'Enter') {
    const input = document.getElementById('terminal-input');
    const cmd = input.value.trim();
    const log = document.getElementById('terminal-log');

    if (cmd) {
      log.innerHTML += `<div>&gt; ${cmd}</div>`;
      input.value = '';

      if (cmd.startsWith('/add')) {
        const num = parseInt(cmd.split(' ')[1] || '0');
        if (!isNaN(num) && num > 0) {
          addCoins(num);
          engineer.log(`–î–æ–±–∞–≤–ª–µ–Ω–æ: ${num} WKC`);
        } else {
          engineer.log('‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ /add');
        }
      } else if (cmd === 'reset') {
        resetCoins();
        engineer.log('üîÑ –ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω.');
      } else if (cmd === 'balance') {
        engineer.log(`üí∞ –ë–∞–ª–∞–Ω—Å: ${getBalance()} WKC`);
      } else {
        engineer.run(cmd);
      }

      log.scrollTop = log.scrollHeight;
    }
  }
}